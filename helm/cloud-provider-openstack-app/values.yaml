# TEMPLATE-APP: This is set as a reasonable default, feel free to change.

name: cloud-provider-openstack
serviceType: managed

project:
  branch: "[[ .Branch ]]"
  commit: "[[ .SHA ]]"


secret:
  create: false
#  name:

# Specify settings with the same key as the CCM config: https://github.com/kubernetes/cloud-provider-openstack/blob/master/docs/openstack-cloud-controller-manager/using-openstack-cloud-controller-manager.md#config-openstack-cloud-controller-manager
cloudConfig:
  global:
  networking:
  loadBalancer:
  blockStorage:
  metadata:



# Check here for config information 
# https://github.com/kubernetes/cloud-provider-openstack/blob/master/docs/openstack-cloud-controller-manager/using-openstack-cloud-controller-manager.md

cinder-csi-templates:
    nameOverride: ""
    fullnameOverride: ""
    timeout: 3m

    csi:
      attacher:
        image:
          repository: k8s.gcr.io/sig-storage/csi-attacher
          tag: v2.2.1
          pullPolicy: IfNotPresent
      provisioner:
        image:
          repository: k8s.gcr.io/sig-storage/csi-provisioner
          tag: v1.6.1
          pullPolicy: IfNotPresent
      snapshotter:
        image:
          repository: k8s.gcr.io/sig-storage/csi-snapshotter
          tag: v2.1.3
          pullPolicy: IfNotPresent
      resizer:
        image:
          repository: k8s.gcr.io/sig-storage/csi-resizer
          tag: v0.5.1
          pullPolicy: IfNotPresent
      livenessprobe:
        image:
          repository: k8s.gcr.io/sig-storage/livenessprobe
          tag: v2.1.0
          pullPolicy: IfNotPresent
        failureThreshold: 5
        initialDelaySeconds: 10
        timeoutSeconds: 10
        periodSeconds: 60
      nodeDriverRegistrar:
        image:
          repository: k8s.gcr.io/sig-storage/csi-node-driver-registrar
          tag: v1.3.0
          pullPolicy: IfNotPresent
      plugin:
        image:
          repository: docker.io/k8scloudprovider/cinder-csi-plugin
          pullPolicy: IfNotPresent
          tag:  # defaults to .Chart.AppVersion
        volumes:
          - name: cacert
            hostPath:
              path: /etc/cacert
        volumeMounts:
          - name: cacert
            mountPath: /etc/cacert
            readOnly: true
          - name: cloud-config
            mountPath: /etc/kubernetes
            readOnly: true

    secret:
      enabled: true
      create: false
    #  name: cinder-csi-cloud-config
    #  data:
    #    cloud-config: |-
    #      [Global]
    #      auth-url=http://openstack-control-plane
    #      user-id=user-id
    #      password=password
    #      trust-id=trust-id
    #      region=RegionOne
    #      ca-file=/etc/cacert/ca-bundle.crt

    storageClass:
      enabled: true
      delete:
        isDefault: false
        allowVolumeExpansion: true
      retain:
        isDefault: true
        allowVolumeExpansion: true


openstack-cloud-controller-manager:
  namespace: kube-system
  cloud-conf-name: cloud-config
  image:
    registry: quay.io
    name: giantswarm/{APP-NAME}
    tag: v0.0.1
    pullPolicy: IfNotPresent



openstack-cloud-controller-manager:
  # Values OpenStack Cloud Controller Manager Helm Chart
  #
  # Define deployment mode for the controller and provide cloud credentials in cloudConfig at the end of the file
  #
  # Image repository name and tag
  image:
    repository: docker.io/k8scloudprovider/openstack-cloud-controller-manager
    tag: ""

  # Set resources for Kubernetes daemonset
  resources: {}
  # resources:
  #   requests:
  #     cpu: 200m

  # Set livenessProbe for Kubernetes daemonset. Used the same port for servicemonitor metrics
  livenessProbe: {}
  # livenessProbe:
  #   httpGet:
  #    path: /metrics
  #    port: 10258

  # Set readinessProbe in the same way like livenessProbe
  readinessProbe: {}

  # Set nodeSelector where the controller shut run, i.e. controlplane nodes
  nodeSelector: []
  # nodeSelector:
  #   node-role.kubernetes.io/controlplane: "true"

  # Set tolerations for nodes where the controller should run, i.e. node should uninitialized, controlplane...
  tolerations: []
  # tolerations:
  #   - key: node.cloudprovider.kubernetes.io/uninitialized
  #     value: "true"
  #     effect: NoSchedule
  #   - key: node-role.kubernetes.io/controlplane
  #     value: "true"
  #     effect: NoSchedule
  #   - key: node-role.kubernetes.io/etcd
  #     value: "true"
  #     effect: NoExecute

  # Any extra arguments for openstack-cloud-controller-manager
  controllerExtraArgs: {}
  # controllerExtraArgs: |-
  #   - --cluster-name=my-cluster

  # Create a service monitor for Prometheus Operator
  serviceMonitor: {}
  # serviceMonitor:
  #   enabled: true

  # Create a secret resource cloud-config (or other name) to store credentials and settings from cloudConfig
  secret:
    create: false
  #  name:

  # Specify settings with the same key as the CCM config: https://github.com/kubernetes/cloud-provider-openstack/blob/master/docs/openstack-cloud-controller-manager/using-openstack-cloud-controller-manager.md#config-openstack-cloud-controller-manager
  cloudConfig:
    global:
    networking:
    loadBalancer:
    blockStorage:
    metadata:
